spring:
  application:
    name: coupon-service
  jackson:
    time-zone: Asia/Seoul
  profiles:
    active: dev
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        use_sql_comments: true
  data:
    redis:
      host: ${REDIS_HOST}
      port: 6379
  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_SERVER}
      group-id: order-service  # Kafka 소비자 그룹 ID (컨슈머가 속할 그룹 이름)
      enable-auto-commit: false  # 자동 커밋 여부 설정
      auto-offset-reset: earliest  # 오프셋 리셋 설정, earliest는 처음부터 읽기
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer  # 메시지 키 디시리얼라이저
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer  # 메시지 값 디시리얼라이저

    producer:
      bootstrap-servers: ${KAFKA_SERVER}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer  # 메시지 키 직렬화 클래스
      value-serializer: org.apache.kafka.common.serialization.StringSerializer  # 메시지 값 직렬화 클래스

eureka:
  instance:
    initial-status: up
    prefer-ip-address: true
    instance-id: coupon-service
    non-secure-port: ${SECURE_PORT}
  client:
    service-url:
      defaultZone: http://${EUREKA_NAME}:${EUREKA_PORT}/${EUREKA_HOST}/



server:
  port: 19093

management:
  endpoints:
    web:
      exposure:
        include: health,info

openapi:
  service:
    url : http://${GATEWAY_SERVER}/coupon-service